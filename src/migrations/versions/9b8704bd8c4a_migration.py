"""Migration

Revision ID: 9b8704bd8c4a
Revises: bd9b03d19b04
Create Date: 2024-08-12 21:28:06.063355

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "9b8704bd8c4a"
down_revision = "bd9b03d19b04"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("run_state", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "updated_at",
                sa.DateTime(),
                nullable=True,  # Change to nullable initially
            )
        )
        batch_op.add_column(
            sa.Column(
                "last_triggered_at",
                sa.DateTime(),
                nullable=True,  # Change to nullable initially
            )
        )

    # Update the columns with values from the 'value' column or default to current timestamp
    op.execute(
        """
        UPDATE run_state
        SET updated_at = COALESCE((value->>'updated_at')::timestamp, NOW()),
            last_triggered_at = COALESCE((value->>'last_triggered_at')::timestamp, NOW())
        """
    )

    # Make the columns non-nullable
    with op.batch_alter_table("run_state", schema=None) as batch_op:
        batch_op.alter_column("updated_at", nullable=False)
        batch_op.alter_column("last_triggered_at", nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("run_state", schema=None) as batch_op:
        batch_op.drop_column("updated_at")
        batch_op.drop_column("last_triggered_at")

    # ### end Alembic commands ###
