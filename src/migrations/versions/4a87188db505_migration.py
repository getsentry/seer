"""Migration

Revision ID: 4a87188db505
Revises: 9ac60c7534ce
Create Date: 2025-05-22 22:45:51.495835

"""

import json
import logging
from datetime import datetime

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "4a87188db505"
down_revision = "9ac60c7534ce"
branch_labels = None
depends_on = None

logger = logging.getLogger(__name__)


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("run_state", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column("created_at", sa.DateTime(), nullable=True)  # Change to nullable initially
        )

    # Update the column with values from the 'value' column or default to current timestamp
    connection = op.get_bind()
    connection.execute(
        sa.text(
            """
            UPDATE run_state
            SET created_at = COALESCE(created_at, last_triggered_at, NOW())
        """
        )
    )

    # Make the column non-nullable
    with op.batch_alter_table("run_state", schema=None) as batch_op:
        batch_op.alter_column("created_at", nullable=False, server_default=sa.func.now())
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("run_state", schema=None) as batch_op:
        batch_op.drop_column("created_at")

    # ### end Alembic commands ###
