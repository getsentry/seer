{
  "openapi": "3.1.0",
  "info": {
    "title": "Sentry Inference APIs",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://seer"
    }
  ],
  "paths": {
    "/v0/issues/severity-score": {
      "post": {
        "tags": [],
        "operationId": "severity_endpoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeverityRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SeverityResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/trends/breakpoint-detector": {
      "post": {
        "tags": [],
        "operationId": "breakpoint_trends_endpoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BreakpointRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreakpointResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v0/issues/similar-issues": {
      "post": {
        "tags": [],
        "operationId": "similarity_endpoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimilarityResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/v0/automation/autofix": {
      "post": {
        "tags": [],
        "operationId": "autofix_endpoint",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AutofixRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AutofixEndpointResponse"
                }
              }
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "components": {
    "schemas": {
      "AutofixEndpointResponse": {
        "properties": {
          "started": {
            "type": "boolean",
            "title": "Started"
          }
        },
        "type": "object",
        "required": [
          "started"
        ],
        "title": "AutofixEndpointResponse"
      },
      "AutofixRequest": {
        "properties": {
          "organization_id": {
            "type": "integer",
            "title": "Organization Id"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "repos": {
            "items": {
              "$ref": "#/components/schemas/RepoDefinition"
            },
            "type": "array",
            "title": "Repos"
          },
          "issue": {
            "$ref": "#/components/schemas/IssueDetails"
          },
          "invoking_user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AutofixUserDetails"
              },
              {
                "type": "null"
              }
            ]
          },
          "base_commit_sha": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Commit Sha"
          },
          "additional_context": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Context"
          },
          "timeout_secs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout Secs"
          },
          "last_updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Updated"
          }
        },
        "type": "object",
        "required": [
          "organization_id",
          "project_id",
          "repos",
          "issue"
        ],
        "title": "AutofixRequest"
      },
      "AutofixUserDetails": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "display_name": {
            "type": "string",
            "title": "Display Name"
          }
        },
        "type": "object",
        "required": [
          "id",
          "display_name"
        ],
        "title": "AutofixUserDetails"
      },
      "BreakpointEntry": {
        "properties": {
          "project": {
            "type": "string",
            "title": "Project"
          },
          "transaction": {
            "type": "string",
            "title": "Transaction"
          },
          "aggregate_range_1": {
            "type": "number",
            "title": "Aggregate Range 1"
          },
          "aggregate_range_2": {
            "type": "number",
            "title": "Aggregate Range 2"
          },
          "unweighted_t_value": {
            "type": "number",
            "title": "Unweighted T Value"
          },
          "unweighted_p_value": {
            "type": "number",
            "title": "Unweighted P Value"
          },
          "trend_percentage": {
            "type": "number",
            "title": "Trend Percentage"
          },
          "absolute_percentage_change": {
            "type": "number",
            "title": "Absolute Percentage Change"
          },
          "trend_difference": {
            "type": "number",
            "title": "Trend Difference"
          },
          "breakpoint": {
            "type": "integer",
            "title": "Breakpoint"
          },
          "request_start": {
            "type": "integer",
            "title": "Request Start"
          },
          "request_end": {
            "type": "integer",
            "title": "Request End"
          },
          "data_start": {
            "type": "integer",
            "title": "Data Start"
          },
          "data_end": {
            "type": "integer",
            "title": "Data End"
          },
          "change": {
            "anyOf": [
              {
                "const": "improvement"
              },
              {
                "const": "regression"
              }
            ],
            "title": "Change"
          }
        },
        "type": "object",
        "required": [
          "project",
          "transaction",
          "aggregate_range_1",
          "aggregate_range_2",
          "unweighted_t_value",
          "unweighted_p_value",
          "trend_percentage",
          "absolute_percentage_change",
          "trend_difference",
          "breakpoint",
          "request_start",
          "request_end",
          "data_start",
          "data_end",
          "change"
        ],
        "title": "BreakpointEntry"
      },
      "BreakpointRequest": {
        "properties": {
          "data": {
            "additionalProperties": {
              "$ref": "#/components/schemas/BreakpointTransaction"
            },
            "type": "object",
            "title": "Data"
          },
          "sort": {
            "type": "string",
            "title": "Sort",
            "default": ""
          },
          "allow_midpoint": {
            "type": "string",
            "title": "Allow Midpoint",
            "default": "1"
          },
          "validate_tail_hours": {
            "type": "integer",
            "title": "Validate Tail Hours",
            "default": 0
          },
          "trend_percentage()": {
            "type": "number",
            "title": "Trend Percentage()",
            "default": 0.1
          },
          "min_change()": {
            "type": "number",
            "title": "Min Change()",
            "default": 0.0
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "BreakpointRequest"
      },
      "BreakpointResponse": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/BreakpointEntry"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "BreakpointResponse"
      },
      "BreakpointTransaction": {
        "properties": {
          "data": {
            "items": {
              "prefixItems": [
                {
                  "type": "integer"
                },
                {
                  "prefixItems": [
                    {
                      "$ref": "#/components/schemas/SnubaMetadata"
                    }
                  ],
                  "type": "array",
                  "maxItems": 1,
                  "minItems": 1
                }
              ],
              "type": "array",
              "maxItems": 2,
              "minItems": 2
            },
            "type": "array",
            "title": "Data"
          },
          "request_start": {
            "type": "integer",
            "title": "Request Start"
          },
          "request_end": {
            "type": "integer",
            "title": "Request End"
          },
          "data_start": {
            "type": "integer",
            "title": "Data Start"
          },
          "data_end": {
            "type": "integer",
            "title": "Data End"
          }
        },
        "type": "object",
        "required": [
          "data",
          "request_start",
          "request_end",
          "data_start",
          "data_end"
        ],
        "title": "BreakpointTransaction"
      },
      "GroupingRequest": {
        "properties": {
          "group_id": {
            "type": "integer",
            "title": "Group Id"
          },
          "project_id": {
            "type": "integer",
            "title": "Project Id"
          },
          "stacktrace": {
            "type": "string",
            "title": "Stacktrace"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "k": {
            "type": "integer",
            "title": "K",
            "default": 1
          },
          "threshold": {
            "type": "number",
            "title": "Threshold",
            "default": 0.01
          }
        },
        "type": "object",
        "required": [
          "group_id",
          "project_id",
          "stacktrace",
          "message"
        ],
        "title": "GroupingRequest"
      },
      "GroupingResponse": {
        "properties": {
          "parent_group_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Group Id"
          },
          "stacktrace_distance": {
            "type": "number",
            "title": "Stacktrace Distance"
          },
          "message_distance": {
            "type": "number",
            "title": "Message Distance"
          },
          "should_group": {
            "type": "boolean",
            "title": "Should Group"
          }
        },
        "type": "object",
        "required": [
          "parent_group_id",
          "stacktrace_distance",
          "message_distance",
          "should_group"
        ],
        "title": "GroupingResponse"
      },
      "IssueDetails": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "short_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Id"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/SentryEvent"
            },
            "type": "array",
            "title": "Events"
          }
        },
        "type": "object",
        "required": [
          "id",
          "title",
          "events"
        ],
        "title": "IssueDetails"
      },
      "RepoDefinition": {
        "properties": {
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "owner": {
            "type": "string",
            "title": "Owner"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "provider",
          "owner",
          "name"
        ],
        "title": "RepoDefinition"
      },
      "SentryEvent": {
        "properties": {
          "entries": {
            "items": {
              "type": "object"
            },
            "type": "array",
            "title": "Entries"
          }
        },
        "type": "object",
        "required": [
          "entries"
        ],
        "title": "SentryEvent"
      },
      "SeverityRequest": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message",
            "default": ""
          },
          "has_stacktrace": {
            "type": "integer",
            "title": "Has Stacktrace",
            "default": 0
          },
          "handled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Handled"
          },
          "trigger_timeout": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trigger Timeout"
          },
          "trigger_error": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trigger Error"
          }
        },
        "type": "object",
        "title": "SeverityRequest"
      },
      "SeverityResponse": {
        "properties": {
          "severity": {
            "type": "number",
            "title": "Severity",
            "default": 0.0
          }
        },
        "type": "object",
        "title": "SeverityResponse"
      },
      "SimilarityResponse": {
        "properties": {
          "responses": {
            "items": {
              "$ref": "#/components/schemas/GroupingResponse"
            },
            "type": "array",
            "title": "Responses"
          }
        },
        "type": "object",
        "required": [
          "responses"
        ],
        "title": "SimilarityResponse"
      },
      "SnubaMetadata": {
        "properties": {
          "count": {
            "type": "number",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "count"
        ],
        "title": "SnubaMetadata"
      }
    }
  }
}
