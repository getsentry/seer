"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import sentry_services.seer.severity_pb2
import typing

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class SeverityStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    GetIssueScore: grpc.UnaryUnaryMultiCallable[
        sentry_services.seer.severity_pb2.ScoreRequest,
        sentry_services.seer.severity_pb2.ScoreResponse,
    ]

class SeverityAsyncStub:
    GetIssueScore: grpc.aio.UnaryUnaryMultiCallable[
        sentry_services.seer.severity_pb2.ScoreRequest,
        sentry_services.seer.severity_pb2.ScoreResponse,
    ]

class SeverityServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def GetIssueScore(
        self,
        request: sentry_services.seer.severity_pb2.ScoreRequest,
        context: _ServicerContext,
    ) -> typing.Union[sentry_services.seer.severity_pb2.ScoreResponse, collections.abc.Awaitable[sentry_services.seer.severity_pb2.ScoreResponse]]: ...

def add_SeverityServicer_to_server(servicer: SeverityServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
